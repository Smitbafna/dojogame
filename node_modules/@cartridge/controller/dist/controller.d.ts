import { g as ControllerOptions, l as ProfileContextTypeVariant } from './types-CCH1I4-O.js';
import BaseProvider from './provider.js';
import { WalletAccount } from 'starknet';
import { i as Policy } from './index.d-BbTUPBeO.js';
import '@starknet-io/types-js';
import '@cartridge/penpal';

declare class ControllerProvider extends BaseProvider {
    private keychain?;
    private profile?;
    private options;
    private iframes;
    constructor(options: ControllerOptions);
    probe(): Promise<WalletAccount | undefined>;
    connect(): Promise<WalletAccount | undefined>;
    disconnect(): Promise<void>;
    openProfile(tab?: ProfileContextTypeVariant): Promise<void>;
    openSettings(): Promise<boolean | null>;
    revoke(origin: string, _policy: Policy[]): Promise<void> | null;
    username(): Promise<string> | undefined;
    fetchControllers(contractAddresses: string[]): Promise<Record<string, string>>;
    openPurchaseCredits(): void;
    private openExecute;
    delegateAccount(): Promise<string | null>;
    private waitForKeychain;
}

export { ControllerProvider as default };
