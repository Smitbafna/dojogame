// src/session/backend.ts
var LocalStorageBackend = class {
  /**
   * Retrieves the value associated with the specified key from local storage.
   * @param key - The key to look up in local storage.
   * @returns A promise that resolves to the stored value as a string, or null if the key doesn't exist.
   */
  async get(key) {
    return localStorage.getItem(key);
  }
  /**
   * Stores a key-value pair in local storage.
   * @param key - The key under which to store the value.
   * @param value - The value to be stored.
   * @returns A promise that resolves when the value has been successfully stored.
   */
  async set(key, value) {
    localStorage.setItem(key, value);
  }
  /**
   * Removes the key-value pair associated with the specified key from local storage.
   * @param key - The key of the item to be removed.
   * @returns A promise that resolves when the item has been successfully removed.
   */
  async delete(key) {
    localStorage.removeItem(key);
  }
  /**
   * Opens the specified URL in a new tab or window.
   * @param url - The URL to open.
   */
  openLink(url) {
    window.open(url, "_blank");
  }
};
export {
  LocalStorageBackend
};
//# sourceMappingURL=backend.js.map